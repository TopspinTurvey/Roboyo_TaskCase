<Activity mc:Ignorable="sap sap2010" x:Class="_20_5___Levenshtein_Distance_Match" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_MatchText" Type="InArgument(x:String)" />
    <x:Property Name="in_MatchPhrase" Type="InArgument(x:String)" />
    <x:Property Name="in_MatchThreshold" Type="InArgument(x:Int32)" />
    <x:Property Name="out_NewSpelling" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1574,2748</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_20_5___Levenshtein_Distance_Match_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="20.15 - Levenshtein Distance Match" sap:VirtualizedContainerService.HintSize="643.3333333333334,2683.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="WordCountText" />
      <Variable x:TypeArguments="x:Int32" Name="WordCountPhrase" />
      <Variable x:TypeArguments="x:Int32" Name="Index" />
      <Variable x:TypeArguments="s:String[]" Name="TextWords" />
      <Variable x:TypeArguments="x:Int32" Name="idx" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="581.3333333333334,123.33333333333333" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Step through the file and use Levenshtein distance to handle any misspellings within a certain threshold. If it matches in this threshold, then we return the new spelling." />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="581.3333333333334,104.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;20.15 - Levenshtein Distance Match: Started...&quot;]" />
    <Assign DisplayName="Assign - Replace new lines with spaces" sap:VirtualizedContainerService.HintSize="581.3333333333334,72" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_MatchText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_MatchText.Replace(Environment.NewLine, " ")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Words in Text" sap:VirtualizedContainerService.HintSize="581.3333333333334,72" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[TextWords]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[in_MatchText.Split(" "c).Where( function(w) not string.IsNullOrWhiteSpace(w)).ToArray()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Total Words for Text" sap:VirtualizedContainerService.HintSize="581.3333333333334,72" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[WordCountText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_MatchText.Split(" "c).Count()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Total Words for Match" sap:VirtualizedContainerService.HintSize="581.3333333333334,72" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[WordCountPhrase]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_MatchPhrase.Split(" "c).Count()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="I use an index here outside of the while idx property, because this index is used in the while condition." DisplayName="Assign - Start Index" sap:VirtualizedContainerService.HintSize="581.3333333333334,134" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Index]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:InterruptibleWhile Condition="[Index &lt;= WordCountText - WordCountPhrase]" CurrentIndex="[idx]" DisplayName="While" sap:VirtualizedContainerService.HintSize="581.3333333333334,1486.6666666666667" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544.6666666666666,1307.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="SubText" />
            <Variable x:TypeArguments="x:Int32" Name="Distance" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="482.6666666666667,72" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[SubText]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Join(" ", TextWords.Skip(Index).Take(WordCountPhrase))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke Levenshtein Distance for the match. If the input threshold is not reached, then we may have a mispelling on a word. Levenshtein distance is a useful calculation to get the number of permutations that one string has when compared to another, telling us how far the two strings are away from each other in an integer distance.&#xA;&#xA;See:&#xA; https://www.csharpstar.com/csharp-string-distance-algorithm/#:~:text=The%20Levenshtein%20distance%20is%20a,one%20word%20into%20the%20other. " Code="int n = s.Length;&#xA;int m = t.Length;&#xA;int[,] d = new int[n + 1, m + 1];&#xA;&#xA;// Step 2&#xA;for (int i = 0; i &lt;= n; d[i, 0] = i++)&#xA;{&#xA;}&#xA;&#xA;for (int j = 0; j &lt;= m; d[0, j] = j++)&#xA;{&#xA;}&#xA;&#xA;// Step 3&#xA;for (int i = 1; i &lt;= n; i++)&#xA;{&#xA;    //Step 4&#xA;    for (int j = 1; j &lt;= m; j++)&#xA;    {&#xA;        // Step 5&#xA;        int cost = (t[j - 1] == s[i - 1]) ? 0 : 1;&#xA;&#xA;        // Step 6&#xA;        d[i, j] = Math.Min(&#xA;            Math.Min(d[i - 1, j] + 1, d[i, j - 1] + 1),&#xA;            d[i - 1, j - 1] + cost);&#xA;    }&#xA;}&#xA;// Step 7&#xA;distance = d[n, m];" DisplayName="Invoke Code - Levenshtein Distance" sap:VirtualizedContainerService.HintSize="482.6666666666667,386" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="s">[in_MatchPhrase]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="t">[SubText]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="distance">[Distance]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <If Condition="[Distance &lt;= in_MatchThreshold]" DisplayName="If - Match Meets threshold" sap:VirtualizedContainerService.HintSize="482.6666666666667,535.3333333333334" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="400,266" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign - New Spelling output" sap:VirtualizedContainerService.HintSize="338,72" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_NewSpelling]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[SubText]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Break sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Break_1" />
              </Sequence>
            </If.Then>
          </If>
          <Assign DisplayName="Assign - Increment Index" sap:VirtualizedContainerService.HintSize="482.6666666666667,72" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Index]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Index + 1]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:InterruptibleWhile.Body>
    </ui:InterruptibleWhile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="581.3333333333334,104.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;20.15 - Levenshtein Distance Match: Done. New spelling: &quot; + out_NewSpelling + &quot;.&quot;]" />
  </Sequence>
</Activity>